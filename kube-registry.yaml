apiVersion: v1
kind: Service
metadata:
  name: kube-registry
  labels:
    service: kube-registry
spec:
  type: NodePort
  ports:
  - port: 443
    nodePort: 32003
    targetPort: 5000
  selector:
    service: kube-registry
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kube-registry-pv-claim
  labels:
    service: kube-registry
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    service: kube-registry
  name: kube-registry-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      service: kube-registry
  template:
    metadata:
      labels:
        service: kube-registry
    spec:
      containers:
      - image: registry:2
        name: registry
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
        command: ["/bin/bash"]
        args: ["-c", "touch /etc/docker/registry/letsencrypt.json"]
        env:
        - name: REGISTRY_HTTP_ADDR
          value: "0.0.0.0:5000"
        - name: REGISTRY_HTTP_HOST
          value: https://docker.example.com
        - name: EGISTRY_HTTP_TLS_LETSENCRYPT_CACHEFILE
          value: /etc/docker/registry/letsencrypt.json
        - name: REGISTRY_HTTP_TLS_LETSENCRYPT_EMAIL
          value: admin@example.com
        - name: REGISTRY_PROXY_REMOTEURL
          value: https://registry-1.docker.io
        ports:
        - containerPort: 5000
          name: registry-port
          protocol: TCP
        volumeMounts:
          - name: kube-registry-ps-lib
            mountPath: "/var/lib/registry"
          - name: kube-registry-ps-etc
            mountPath: "/etc/docker/registry"
      volumes:
        - name: kube-registry-ps-etc
          persistentVolumeClaim:
            claimName: kube-registry-pv-claim
        - name: kube-registry-ps-lib
          persistentVolumeClaim:
            claimName: kube-registry-pv-claim
